#Christopher Marotta
#March 24, 2019
#Riemann Sum Stuff

import numpy as np
import matplotlib.pyplot as plt

def f(x):
    return x**2

def Riemann(a, b, yIn, n):
    deltax = (b-a)/n
    area = np.zeros(n)
    for i in range(1, n+1):
        if i > 1:
            area[i-1] = yIn[i-1]*deltax+area[i-2]
        else:
            area[i-1] = yIn[i-1]*deltax
    return area



#Setting up for x
a = 0
b = 2
n = 101

#Displaying f(x):
xNormal = np.linspace(a

#Displaying the estimate for part two.
xAntiderivative = np.linspace(a, b, n)
yAntiderivative = f(xAntiderivative)
RSMain = Riemann(a, b, yAntiderivative, (n))
plt.plot(xAntiderivative, RSMain)

plt.title("MathPlotLib Widgets")
plt.legend(["f(x) = x^2", "F(x) = (x^3)/3", "f'(x) = 2*x"])
plt.show()
